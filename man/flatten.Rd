% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepUtils.r
\name{flatten}
\alias{flatten}
\title{Flatten data into a one-dimensional array}
\usage{
flatten(data, axis = NULL, order = c("C", "F"))
}
\arguments{
\item{data}{Data to be flatten.}

\item{axis}{The axes to be fixed while iterating over the remaining axes of \code{data}.
By default (\code{NULL}), the structure of \code{data} is interpret as a stack (of stack...) of matrices,
with either the first axis (\code{C}-order) or the second axis (\code{F}-order) and all remaining axes are fixed.}

\item{order}{The order in which elements of \code{data} should be read during flattening.
By default, the order is equivalent to the \code{C}-style ordering and means elements should be read in row-major order.
In opposite, the \code{Fortran}-style ordering means elements should be read in column-major order.}
}
\value{
The flatten data in form of a one-dimensional array.
}
\description{

}
\examples{
v <- (1:24); dim(v); ndim(v)
l <- list(x1 = 1:10, x2 = seq(10, 100, 10), x3 = list(a = 11, b = c(2, 23)))
m <- matrix(1:24, nrow = 6); dim(m); length(m);
a3 <- array(v, dim = c(4, 3, 2)); dim(a3); length(a3)
a4 <- array(1:48, dim = c(4, 3, 2, 2))
data <- a4; data
flatten(data, order = "F"); flatten(data, order = "C")
}
\seealso{
Other Utils: 
\code{\link{as_ANN_matrix}()},
\code{\link{as_tensor_1d}()},
\code{\link{as_tensor_2d}()},
\code{\link{as_tensor_3d}()},
\code{\link{degree}()},
\code{\link{distance}()},
\code{\link{eye}()},
\code{\link{insert}()},
\code{\link{list_as_numeric}()},
\code{\link{marray}()},
\code{\link{mbind}()},
\code{\link{ndim}()},
\code{\link{nsamples}()},
\code{\link{nsubsequences}()},
\code{\link{ntimesteps}()},
\code{\link{nunits}()},
\code{\link{probability}()},
\code{\link{radian}()},
\code{\link{random_seed}()},
\code{\link{re.factor}()},
\code{\link{sd_pop}()},
\code{\link{similarity}()},
\code{\link{slice}()},
\code{\link{ta}()},
\code{\link{tensor}()},
\code{\link{vander}()},
\code{\link{var_pop}()},
\code{\link{vector_as_ANN_matrix}()},
\code{\link{vector_as_numeric}()}
}
\concept{Utils}
