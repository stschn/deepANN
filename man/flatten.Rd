% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepMLP.r
\name{flatten}
\alias{flatten}
\title{Flatten data into a one-dimensional array}
\usage{
flatten(data, order = c("C", "F"))
}
\arguments{
\item{data}{Data to be flatten.}

\item{order}{The order in which elements of \code{data} should be read during flattening.
By default, the order is equivalent to the \code{C}-style ordering and means elements should be read in row-major order.
In opposite, the \code{Fortran}-style ordering means elements should be read in column-major order.}
}
\value{
The flatten data in form of a one-dimensional array.
}
\description{
Flatten data into a one-dimensional array
}
\examples{
v <- (1:24); dim(v); length(dim(v))
m <- matrix(1:24, nrow = 6); dim(m); length(m);
a3 <- array(v, dim = c(4, 3, 2)); dim(a3); length(a3)
a4 <- array(1:48, dim = c(4, 3, 2, 2))
data <- a4; data
flatten(data, order = "F"); flatten(data, order = "C")
}
\seealso{
Other Single & Multi Layer Perceptron (SLP, MLP): 
\code{\link{as.ANN.matrix}()},
\code{\link{as.MLP.X}()},
\code{\link{as.MLP.Y}()},
\code{\link{as.numpy}()},
\code{\link{as.tensor.1D}()},
\code{\link{as.tensor.2D}()},
\code{\link{as.tensor.3D}()},
\code{\link{as.tensor}()},
\code{\link{build.MLP}()},
\code{\link{fit.MLP}()},
\code{\link{get.MLP.X.samples}()},
\code{\link{get.MLP.X.units}()},
\code{\link{get.MLP.Y.samples}()},
\code{\link{get.MLP.Y.units}()},
\code{\link{load_weights.ANN}()},
\code{\link{predict.ANN}()},
\code{\link{save_weights.ANN}()},
\code{\link{vector.as.ANN.matrix}()},
\code{\link{vector.as.numeric}()}
}
\concept{Single & Multi Layer Perceptron (SLP, MLP)}
