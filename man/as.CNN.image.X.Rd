% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepCNN.r
\name{as.CNN.image.X}
\alias{as.CNN.image.X}
\title{Create a 4-dimensional array for image features (input)}
\usage{
as.CNN.image.X(images, height, width, channels = 3L, order = c("C", "F"))
}
\arguments{
\item{images}{Image data either a 3D array or a list of file names, e.g. returned by \code{list.files}.}

\item{height}{The height of an image, equal to the number of rows.}

\item{width}{The width of an image, equal to the number of columns.}

\item{channels}{The number of channels of an image. A color channel is a primary color (like red, green and blue), 
equal to a color valence (denotes how light effects the color sensation of an eye or in common of the brain).
Primary colors can be mixed to produce any color. 
A channel equal \code{1} indicates a grayscale image, \code{3} a color image.}

\item{order}{The order in which elements of image data should be read during the rearrangement. \code{C} (default) means elements should be read in row-major order (C-style), \code{F} means elements should be read in column-major order (Fortran-style).}
}
\value{
A 4D feature array with the dimensions samples (number of images), height, width and channels.
}
\description{
Create a 4-dimensional array for image features (input)
}
\seealso{
\code{\link[base]{list.files}}, \code{\link[keras]{image_load}}, \code{\link[keras]{image_to_array}}, \code{\link[reticulate]{array_reshape}},
  \code{\link{as.CNN.image.Y}}.

Other Convolutional Neural Network (CNN): 
\code{\link{as.CNN.image.Y}()},
\code{\link{as.CNN.temp.X}()},
\code{\link{as.CNN.temp.Y}()},
\code{\link{as_images_array}()},
\code{\link{as_images_tensor4D}()},
\code{\link{get.CNN.image.X.channels}()},
\code{\link{get.CNN.image.X.height}()},
\code{\link{get.CNN.image.X.samples}()},
\code{\link{get.CNN.image.X.width}()},
\code{\link{get.CNN.image.Y.samples}()},
\code{\link{get.CNN.image.Y.units}()},
\code{\link{get.CNN.temp.X.samples}()},
\code{\link{get.CNN.temp.X.subsequences}()},
\code{\link{get.CNN.temp.X.timesteps}()},
\code{\link{get.CNN.temp.X.units}()},
\code{\link{get.CNN.temp.Y.samples}()},
\code{\link{get.CNN.temp.Y.timesteps}()},
\code{\link{get.CNN.temp.Y.units}()},
\code{\link{images_load}()},
\code{\link{images_resize}()}
}
\concept{Convolutional Neural Network (CNN)}
