% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepMLP.r
\name{fit_MLP}
\alias{fit_MLP}
\title{Fit SLP/MLP model}
\usage{
fit_MLP(
  model,
  x,
  y,
  batch_size = 1,
  epochs = 10,
  verbose = 1,
  validation_split = 0,
  cross_validation = NULL
)
}
\arguments{
\item{model}{A model object to train, e.g. returned by \code{build_MLP}.}

\item{x}{A feature data set, usually a matrix or data frame.}

\item{y}{An outcome data set, usually a vector, matrix or data frame.}

\item{batch_size}{Batch size, the number of samples per gradient update.}

\item{epochs}{Number of epochs to train the model.}

\item{verbose}{Verbosity mode (0 = silent, 1 = progress bar, 2 = one line per epoch) determines how the training progress is visualized.}

\item{validation_split}{Float between 0 and 1. Fraction of the training data used as validation data.}

\item{cross_validation}{List or \code{NULL} (default). The list contains two elements whereby the first element stands for the number of folds (k)
and the second element indicates the type \code{min} or \code{max} for quality measuring.}
}
\value{
A trained model object.
}
\description{
\code{fit_MLP} is a wrapper function for fitting a feedforward SLP or MLP.
}
\seealso{
\code{\link{build_MLP}},
  \code{\link[keras]{fit.keras.engine.training.Model}}, \code{\link[keras]{evaluate.keras.engine.training.Model}}.

Other Single & Multi Layer Perceptron (SLP, MLP): 
\code{\link{as_MLP_X}()},
\code{\link{as_MLP_Y}()},
\code{\link{build_MLP}()},
\code{\link{load_weights_ANN}()},
\code{\link{predict_ANN}()},
\code{\link{save_weights_ANN}()}
}
\concept{Single & Multi Layer Perceptron (SLP, MLP)}
