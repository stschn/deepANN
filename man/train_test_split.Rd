% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepSelection.r
\name{train_test_split}
\alias{train_test_split}
\title{Data split}
\usage{
train_test_split(
  ...,
  test_size = NULL,
  train_size = NULL,
  random_state = NULL,
  shuffle = TRUE
)
}
\arguments{
\item{...}{Sequence of data.}

\item{test_size}{An integer or float value between 0.0 and 1.0 representing the absolute number of test samples (integer) or the proportion of the data to include in the test split (float).
If \code{NULL} (default), the value is set to the complement of the \code{train size}. If \code{train_size} is also \code{NULL}, it will be set to 0.25.}

\item{train_size}{An integer or float value between 0.0 and 1.0 representing the absolute number of train samples (integer) or the proportion of the data to include in the train split (float).
If \code{NULL} (default), the value is set to the complement of the \code{test size}.}

\item{random_state}{Controls the shuffling applied to the data before applying the split. Pass an int for reproducible output across multiple function calls.}

\item{shuffle}{Whether or not to shuffle the data before splitting.}
}
\value{
List containing train-test split of inputs.
}
\description{
Split data into random train and test subsets.
}
\examples{
  library(marray)

  df <- data.frame(rating = factor(sample(c("low", "medium", "high") -> lvls, size = 100, replace = T), levels = lvls),
                   personality = sample(30, size = 100, replace = T),
                   motivation = runif(100, min = 0, max = 100))

  a <- marray(1:24, dim = c(4, 3, 2))
  m <- marray(1:24, dim = c(6, 4))
  train_test_split(df, a, m)

  df <- data.frame(y = 1:20, x1 = 1:20, x2 = 1:20)
  X <- marray(df[c("x1", "x2")])
  y <- marray(df[c("y")])
  train_test_split(X, y, random_state = 0, shuffle = T)
}
