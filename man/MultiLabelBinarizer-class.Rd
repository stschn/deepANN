% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepEncoder.r
\docType{class}
\name{MultiLabelBinarizer}
\alias{MultiLabelBinarizer}
\title{class MultiLabelBinarizer}
\description{
A class for encoding labels as a multiple binary numeric matrix.
}
\examples{
x <- list(
  c("sci-fi", "thriller"),
  c("comedy"),
  c("comedy", "horror"),
  c("horror"),
  c("western", "comedy"),
  c("thriller", "comedy", "sci-fi")
)
mlb <- MultiLabelBinarizer$new()
bm <- mlb$fit_transform(x)
mlb$inverse_transform(bm)
}
\section{Super class}{
\code{\link[deepANN:Encoder]{deepANN::Encoder}} -> \code{MultiLabelBinarizer}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{categories}}{('NULL' | character vector)\cr
Holds the labels for the input.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MultiLabelBinarizer-new}{\code{MultiLabelBinarizer$new()}}
\item \href{#method-MultiLabelBinarizer-fit}{\code{MultiLabelBinarizer$fit()}}
\item \href{#method-MultiLabelBinarizer-transform}{\code{MultiLabelBinarizer$transform()}}
\item \href{#method-MultiLabelBinarizer-fit_transform}{\code{MultiLabelBinarizer$fit_transform()}}
\item \href{#method-MultiLabelBinarizer-inverse_transform}{\code{MultiLabelBinarizer$inverse_transform()}}
\item \href{#method-MultiLabelBinarizer-clone}{\code{MultiLabelBinarizer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiLabelBinarizer-new"></a>}}
\if{latex}{\out{\hypertarget{method-MultiLabelBinarizer-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiLabelBinarizer$new(categories = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{categories}}{Desired categories of the input data. If \code{NULL} (default), the categories are automatically determined from the input data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiLabelBinarizer-fit"></a>}}
\if{latex}{\out{\hypertarget{method-MultiLabelBinarizer-fit}{}}}
\subsection{Method \code{fit()}}{
Extract labels from input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiLabelBinarizer$fit(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input, usually a \code{\link{list}} consisting of vectors.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The instance \code{self} itself.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiLabelBinarizer-transform"></a>}}
\if{latex}{\out{\hypertarget{method-MultiLabelBinarizer-transform}{}}}
\subsection{Method \code{transform()}}{
Encode input to numeric values between 0 and n_labels-1.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiLabelBinarizer$transform(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input that will be encoded.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The encoded \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiLabelBinarizer-fit_transform"></a>}}
\if{latex}{\out{\hypertarget{method-MultiLabelBinarizer-fit_transform}{}}}
\subsection{Method \code{fit_transform()}}{
Run \code{fit()} and \code{transform()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiLabelBinarizer$fit_transform(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input that will be encoded.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The encoded \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiLabelBinarizer-inverse_transform"></a>}}
\if{latex}{\out{\hypertarget{method-MultiLabelBinarizer-inverse_transform}{}}}
\subsection{Method \code{inverse_transform()}}{
Transform labels back to original encoding.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiLabelBinarizer$inverse_transform(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The data that will be transformed back.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The original encoded \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiLabelBinarizer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MultiLabelBinarizer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiLabelBinarizer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
