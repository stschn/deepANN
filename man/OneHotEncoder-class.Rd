% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepEncoder.r
\docType{class}
\name{OneHotEncoder}
\alias{OneHotEncoder}
\title{class OneHotEncoder}
\description{
A class for encoding labels as a one-hot numeric array.
}
\examples{
x <- factor(c("small", "small", "medium", "large", "large", "medium", "small"), levels = c("small", "medium", "large"))
ohe <- OneHotEncoder$new()
xt <- ohe$fit_transform(x)
ohe$inverse_transform(xt)
}
\section{Super class}{
\code{\link[deepANN:Encoder]{deepANN::Encoder}} -> \code{OneHotEncoder}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{categories}}{('NULL' | character vector)\cr
Holds the labels for the input.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OneHotEncoder-new}{\code{OneHotEncoder$new()}}
\item \href{#method-OneHotEncoder-fit}{\code{OneHotEncoder$fit()}}
\item \href{#method-OneHotEncoder-transform}{\code{OneHotEncoder$transform()}}
\item \href{#method-OneHotEncoder-fit_transform}{\code{OneHotEncoder$fit_transform()}}
\item \href{#method-OneHotEncoder-inverse_transform}{\code{OneHotEncoder$inverse_transform()}}
\item \href{#method-OneHotEncoder-clone}{\code{OneHotEncoder$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OneHotEncoder-new"></a>}}
\if{latex}{\out{\hypertarget{method-OneHotEncoder-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OneHotEncoder$new(categories = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{categories}}{Desired categories of the input data. If \code{NULL} (default), the categories are automatically determined from the input data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OneHotEncoder-fit"></a>}}
\if{latex}{\out{\hypertarget{method-OneHotEncoder-fit}{}}}
\subsection{Method \code{fit()}}{
Extract labels from input.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OneHotEncoder$fit(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input, usually a \code{\link{factor}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The instance \code{self} itself.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OneHotEncoder-transform"></a>}}
\if{latex}{\out{\hypertarget{method-OneHotEncoder-transform}{}}}
\subsection{Method \code{transform()}}{
Encode input to numeric values between 0 and n_labels-1.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OneHotEncoder$transform(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input that will be encoded.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The encoded \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OneHotEncoder-fit_transform"></a>}}
\if{latex}{\out{\hypertarget{method-OneHotEncoder-fit_transform}{}}}
\subsection{Method \code{fit_transform()}}{
Run \code{fit()} and \code{transform()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OneHotEncoder$fit_transform(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input that will be encoded.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The encoded \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OneHotEncoder-inverse_transform"></a>}}
\if{latex}{\out{\hypertarget{method-OneHotEncoder-inverse_transform}{}}}
\subsection{Method \code{inverse_transform()}}{
Transform labels back to original encoding.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OneHotEncoder$inverse_transform(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The data that will be transformed back.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The original encoded \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OneHotEncoder-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OneHotEncoder-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OneHotEncoder$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
