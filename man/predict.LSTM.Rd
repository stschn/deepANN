% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepRNN.r
\name{predict.LSTM}
\alias{predict.LSTM}
\title{Predict with LSTM model}
\usage{
\method{predict}{LSTM}(
  lstm,
  X,
  timesteps = 1,
  lag = 0,
  differences = 1,
  batch_size = 1,
  y.min = NULL,
  y.max = NULL,
  invert_first_row = NULL,
  Y.actual = NULL,
  type = "univariate"
)
}
\arguments{
\item{lstm}{A model object, returned by \code{fit.LSTM} in the list element \code{model}.}

\item{X}{A feature data set, usually a matrix or data.frame, returned by \code{get.LSTM.XY}.}

\item{timesteps}{The number of timesteps; stands for the number of different periods within one sample (record) of the resampled feature matrix, returned by \code{as.LSTM.X}.}

\item{lag}{The number of considered lags on feature side.}

\item{differences}{The number of differences.}

\item{batch_size}{Batch size, the number of samples used per gradient update.}

\item{y.min}{A vector with minima of outcomes, returned by \code{normalize_data}, otherwise \code{NULL}.}

\item{y.max}{A vector with maxima of outcomes, returned by \code{normalize_data}, otherwise \code{NULL}.}

\item{invert_first_row}{The row index of the first row of the training or test data set regarding to the raw data set before differencing.}

\item{Y.actual}{A vector, matrix or data.frame of raw data outcome values used for invert differencing.}

\item{type}{The type of time series: \code{univariate} or \code{multivariate}.}
}
\value{
A two- or three-dimensional array with predicted outcome values.
  A two-dimensional array results if \code{return_sequences=FALSE} was set at \code{fit.LSTM}.
  A three-dimensional array results if \code{return_sequences=TRUE} was set at \code{fit.LSTM}.
}
\description{
Predict with LSTM model
}
\seealso{
\code{\link{fit.LSTM}}, \code{\link{get.LSTM.XY}}, \code{\link{as.LSTM.X}},
  \code{\link[stats]{predict}}, \code{\link{normalize_data}}.

Other Recurrent Neural Network (RNN), Long Short-Term Memory (LSTM): 
\code{\link{as.LSTM.X}()},
\code{\link{as.LSTM.Y}()},
\code{\link{as.LSTM.data.frame}()},
\code{\link{as.LSTM.period_outcome}()},
\code{\link{as.lag}()},
\code{\link{as.timesteps}()},
\code{\link{build.LSTM}()},
\code{\link{fit.LSTM}()},
\code{\link{get.LSTM.X.samples}()},
\code{\link{get.LSTM.X.timesteps}()},
\code{\link{get.LSTM.X.units}()},
\code{\link{get.LSTM.XY}()},
\code{\link{get.LSTM.Y.samples}()},
\code{\link{get.LSTM.Y.units}()},
\code{\link{get.LSTM.period_shift}()},
\code{\link{start.LSTM.invert_differencing}()}
}
\concept{Recurrent Neural Network (RNN), Long Short-Term Memory (LSTM)}
