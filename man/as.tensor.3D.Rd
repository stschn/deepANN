% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepMLP.r
\name{as.tensor.3D}
\alias{as.tensor.3D}
\title{Transform data into a tensor with three ranks or dimensions.}
\usage{
as.tensor.3D(data, ncol = 1, reverse = FALSE, by = c("row", "col", "step"))
}
\arguments{
\item{data}{A dataset, usually a matrix or data frame.}

\item{ncol}{The number of columns in the resulting tensor. If \code{by = step}, the number of columns is equal to the number of timesteps used for a RNN respectively LSTM.}

\item{reverse}{Controls the order of the values in the transformed vector \code{X}. By default they are used in the given order, but they can also be used in reverse order.}

\item{by}{Controls the transformation process. The options \code{row} and \code{col} lead to a matrix whereby the values are structured row-wise or column-wise.
The option \code{step} stands for a stepwise order of the values row by row (e.g. 1 2 3, 2 3 4, 4 5 6 etc.).}
}
\value{
A 3D-tensor (three-dimensional array).
}
\description{
Transform data into a tensor with three ranks or dimensions.
}
\seealso{
\code{\link{as.tensor.1D}}, \code{\link{as.tensor.2D}}, \code{\link{vector.as.ANN.matrix}}.

Other Single & Multi Layer Perceptron (SLP, MLP): 
\code{\link{as.ANN.matrix}()},
\code{\link{as.MLP.X}()},
\code{\link{as.MLP.Y}()},
\code{\link{as.tensor.1D}()},
\code{\link{as.tensor.2D}()},
\code{\link{build.MLP}()},
\code{\link{fit.MLP}()},
\code{\link{get.MLP.X.units}()},
\code{\link{get.MLP.Y.units}()},
\code{\link{predict.MLP}()},
\code{\link{vector.as.ANN.matrix}()}
}
\concept{Single & Multi Layer Perceptron (SLP, MLP)}
