% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepRNN.r
\name{fit.LSTM}
\alias{fit.LSTM}
\title{Fit LSTM model}
\usage{
fit.LSTM(
  model,
  X,
  Y,
  timesteps = 1L,
  batch_size = 1,
  epochs = 10,
  verbose = 1,
  validation_split = 0,
  cross_validation = NULL
)
}
\arguments{
\item{model}{A model object to train, e.g. returned by \code{build.LSTM}.}

\item{X}{A feature data set, usually a matrix or data frame, returned by \code{get.LSTM.XY}.}

\item{Y}{An outcome data set, usually a vector, matrix or data frame, returned by \code{get.LSTM.XY}.}

\item{timesteps}{A vector of timesteps for \code{X} and \code{Y}.
A feature does always have at least one timestep, but an outcome is either a scalar with one implicit timestep or a sequence with at least two timesteps.
If only one value for \code{timesteps} is given, this value is used for the resampled feature tensor produced by \code{as.LSTM.X}. If two values are given,
the first value is used as before and the second value for the resampled sequence or multi-step outcome tensor produced by \code{as.LSTM.Y}.}

\item{batch_size}{Batch size, the number of samples per gradient update within training process.}

\item{epochs}{Number of epochs to train the model.}

\item{verbose}{Verbosity mode (0 = silent, 1 = progress bar, 2 = one line per epoch) determines how the training progress is visualized.}

\item{validation_split}{Float between 0 and 1. Fraction of the training data used as validation data.}

\item{cross_validation}{List or \code{NULL} (default). The list contains two elements whereby the first element stands for the number of folds (k)
and the second element indicates the type \code{min} or \code{max} for quality measuring.}
}
\value{
A trained model object.
}
\description{
\code{fit.LSTM} is a wrapper function for fitting a LSTM model.
}
\seealso{
\code{\link{build.LSTM}}, \code{\link{get.LSTM.XY}},
  \code{\link[keras]{fit.keras.engine.training.Model}}, \code{\link[keras]{evaluate.keras.engine.training.Model}}.

Other Recurrent Neural Network (RNN): 
\code{\link{as.LSTM.X}()},
\code{\link{as.LSTM.Y}()},
\code{\link{as.LSTM.data.frame}()},
\code{\link{as.LSTM.period_outcome}()},
\code{\link{as.lag}()},
\code{\link{as.timesteps}()},
\code{\link{build.LSTM}()},
\code{\link{get.LSTM.X.samples}()},
\code{\link{get.LSTM.X.timesteps}()},
\code{\link{get.LSTM.X.units}()},
\code{\link{get.LSTM.XY}()},
\code{\link{get.LSTM.Y.samples}()},
\code{\link{get.LSTM.Y.timesteps}()},
\code{\link{get.LSTM.Y.units}()},
\code{\link{get.period_shift}()},
\code{\link{load_weights.ANN}()},
\code{\link{predict.ANN}()},
\code{\link{save_weights.ANN}()},
\code{\link{start.invert_differencing}()}
}
\concept{Recurrent Neural Network (RNN)}
