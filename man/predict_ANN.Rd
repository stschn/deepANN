% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepRNN.r
\name{predict_ANN}
\alias{predict_ANN}
\title{Predict with ANN model}
\usage{
predict_ANN(
  model,
  x,
  batch_size = 1,
  scale_type = NULL,
  scaler = NULL,
  diff_type = NULL,
  timesteps = 1,
  lag = 0,
  differences = 1,
  invert_first_row = NULL,
  y = NULL,
  type = "univariate"
)
}
\arguments{
\item{model}{A model object, e.g. returned by \code{fit_MLP} or \code{fit_LSTM}.}

\item{x}{A feature tensor returned by \code{as_MLP_X} or \code{as_LSTM_X}.}

\item{batch_size}{Batch size, the number of samples used per gradient update.}

\item{scale_type}{Type of scaling with supported techniques min-max scaling (\code{minmax}), z-score scaling (\code{zscore}) and log transformation (\code{log}).
Per default (\code{NULL}) no inverted scaling is done.}

\item{scaler}{Scaling factors for the different scaling types. The type min-max scaling needs a list with vectors with min and max values for each outcome,
z-score scaling needs a list with vectors with mean and sd values for each outcome, center scaling needs a constant value, and log transformation needs no scaler.}

\item{diff_type}{Type of differentiation with supported techniques simple-differentiation (\code{simple}), log-differentiation (\code{log}) and percentage-differentiation (\code{percentage}).
\code{NULL} (default) indicates that no inverted differentiation is done.}

\item{timesteps}{The number of timesteps; stands for the number of different periods within one sample (record) of the resampled feature matrix, returned by \code{as_LSTM_X}.}

\item{lag}{The number of considered lags on feature side.}

\item{differences}{The number of differences.}

\item{invert_first_row}{The row index of the first row of the training or test data set regarding to the raw data set before differencing.}

\item{y}{A vector, matrix or data frame of raw data outcome values used for invert differentiation.}

\item{type}{The type of time series: \code{univariate} or \code{multivariate}.}
}
\value{
A two- or three-dimensional array with predicted outcome values.
  A two-dimensional array results for \code{fit_MLP} or for \code{fit_LSTM} if \code{return_sequences = FALSE}.
  A three-dimensional array results for \code{fit_LSTM} if \code{return_sequences = TRUE}.
}
\description{

}
\seealso{
\code{\link{fit_MLP}}, \code{\link{as_MLP_X}}, \code{\link{fit_LSTM}}, \code{\link{as_LSTM_X}},
  \code{\link[stats]{predict}}, \code{\link{scale_train_test}}.

Other Single & Multi Layer Perceptron (SLP, MLP): 
\code{\link{as_MLP_X}()},
\code{\link{as_MLP_Y}()},
\code{\link{build_MLP}()},
\code{\link{fit_MLP}()},
\code{\link{load_weights_ANN}()},
\code{\link{save_weights_ANN}()}

Other Recurrent Neural Network (RNN): 
\code{\link{as_LSTM_X}()},
\code{\link{as_LSTM_Y}()},
\code{\link{as_LSTM_data_frame}()},
\code{\link{as_LSTM_period_outcome}()},
\code{\link{as_lag}()},
\code{\link{as_timesteps}()},
\code{\link{build_LSTM}()},
\code{\link{fit_LSTM}()},
\code{\link{get_LSTM_XY}()},
\code{\link{get_period_shift}()},
\code{\link{load_weights_ANN}()},
\code{\link{save_weights_ANN}()},
\code{\link{start_invert_differencing}()}
}
\concept{Recurrent Neural Network (RNN)}
\concept{Single & Multi Layer Perceptron (SLP, MLP)}
